name: CI/CD Pipeline

on:
  push:

jobs:
  install-exceptions:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Java and Maven
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'adopt'
          cache: maven

      - name: Install exceptions module
        run: mvn -f exceptions/pom.xml clean install

      - name: Cache Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

  test-services:
    runs-on: ubuntu-latest
    needs: install-exceptions
    strategy:
      matrix:
        service: [audit-service, flat-service, parser-service, sender-service, user-service]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Restore Maven cache
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up Java and Maven
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'adopt'
          cache: maven

      - name: Run tests for "${{ matrix.service }}"
        run: |
          cd ${{ matrix.service }}
          mvn clean test

      - name: Package service JAR
        run: |
          cd ${{ matrix.service }}
          mvn package -DskipTests

      - name: Archive JAR files
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.service }}
          path: ${{ matrix.service }}/target/*.jar

  build:
    runs-on: ubuntu-latest
    needs: test-services
    strategy:
      matrix:
        service: [audit-service, flat-service, parser-service, sender-service, user-service]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Download JAR files
        uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.service }}
          path: ${{ matrix.service }}/target/*.jar

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker images
        uses: docker/build-push-action@v6
        with:
          context: ./${{ matrix.service }}/target
          file: ./${{ matrix.service }}/Dockerfile
          push: false
          tags: user/${{ matrix.service }}:latest
